name: Advanced Build and Test ASP.NET Core App

on:
  push:
    branches:
      - main
  
  schedule:
    - cron: '30 11 * * 3,5' 

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application
        run: |
          mkdir -Force bin/Release 
          dotnet build --configuration Release --no-restore

      - name: Determine Version Tag
        id: version
        run: |
            $BranchName = "${{ github.ref_name }}".Replace("/", "-")
            $ShortHash = $(git rev-parse --short HEAD)
            $VersionTag = "$BranchName-$ShortHash"
            echo "::set-output name=VERSION_TAG::$VersionTag"

      - name: Upload Build Artifacts with Versioning
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts--${{ steps.version.outputs.VERSION_TAG }}
          path: '**/bin/Release/net*/**'

  test-coverage:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --configuration Release --no-restore

      - name: Run Unit Tests with Code Coverage
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory TestResults
        continue-on-error: true

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ needs.build.outputs.VERSION_TAG }}
          path: TestResults
          retention-days: 7

      - name: Upload Code Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-${{ needs.build.outputs.VERSION_TAG }}
          path: TestResults/**/coverage.cobertura.xml
          retention-days: 7
  
  sonar:
      name: SonarCloud Analysis
      needs: [build, test-coverage]
      runs-on: self-hosted
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Restore Dependencies
          run: dotnet restore
        
        - name: Download Coverage Report
          uses: actions/download-artifact@v4
          with:
            name: code-coverage-${{ needs.build.outputs.VERSION_TAG }}
            path: coverage
        
        - name: Cache SonarCloud Packages
          uses: actions/cache@v4
          with:
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        
        - name: Cache SonarCloud Scanner
          id: cache-sonar-scanner
          uses: actions/cache@v4
          with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner
        
        - name: Install SonarCloud Scanner
          if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
          shell: powershell
          run: |
                New-Item -Path .\.sonar\scanner -ItemType Directory -Force
                dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        
        - name: Run SonarCloud Analysis
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          shell: powershell
          run: |
                .\.sonar\scanner\dotnet-sonarscanner begin /k:"SurajMishraNagarro_AspNetMVCCalculator" /o:"surajmishranagarro" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverageReportPaths="coverage/coverage.cobertura.xml"
                dotnet build --configuration Release --no-restore
                .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        
  # notify:
  #   needs: [build,sonar, test-coverage]
  #   runs-on: self-hosted
  #   steps:
  #     - name: Send Email on Failure
  #       if: failure()
  #       uses: dawidd6/action-send-mail@v3
  #       with:
  #         server_address: smtp.gmail.com
  #         server_port: 587
  #         username: ${{ secrets.EMAIL_USERNAME }}
  #         password: ${{ secrets.EMAIL_PASSWORD }}
  #         subject: " Build or Tests Failed: ${{ github.repository }}"
  #         to: ${{ secrets.TO_EMAIL }}
  #         from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}>"
  #         body: |
  #           Build or Tests Failed for ${{ github.repository }}
  #           Repository: ${{ github.repository }}
  #           Branch: ${{ github.ref }}
  #           Commit: ${{ github.sha }}
  #           Triggered by: ${{ github.actor }}

  #           Check the logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
