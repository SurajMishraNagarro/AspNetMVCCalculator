name: Optimized Build and Test Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: '30 11 * * 3,5' 

jobs:

  build:
    runs-on: self-hosted
    outputs:
      VERSION_TAG: ${{ steps.version.outputs.VERSION_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application
        run: |
          mkdir -Force bin/Release 
          dotnet build --configuration Release --no-restore

      - name: Determine Version Tag
        id: version
        run: |
            $BranchName = "${{ github.ref_name }}".Replace("/", "-")
            $ShortHash = $(git rev-parse --short HEAD)
            $VersionTag = "$BranchName-$ShortHash"
            "VERSION_TAG=$VersionTag" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Upload Build Artifacts with Versioning
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts--${{ steps.version.outputs.VERSION_TAG }}
          path: '**/bin/Release/net9.0/**'


  upload-artifactory:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts--${{ needs.build.outputs.VERSION_TAG }}
          path: ./publish

      - name: Create Zip Archive of Publish Folder
        shell: powershell
        run: |
          Compress-Archive -Path "publish\*" -DestinationPath "publish/build-artifacts--${{ needs.build.outputs.VERSION_TAG }}.zip"

      - name: Upload Build Artifact to Artifactory
        shell: powershell
        run: |
          $VersionTag = "${{ needs.build.outputs.VERSION_TAG }}"
          $artifactPath = "./publish/build-artifacts--$VersionTag.zip"
          $targetFilePath = "builds/build-artifacts--$VersionTag.zip"

          if (!(Test-Path $artifactPath)) {
              Write-Output "Error: Zip file not found!"
              exit 1
          }

          Write-Output "Uploading artifact to Artifactory..."
          curl.exe -u "suraj.mishra@nagarro.com:${{ secrets.ARTIFACTORY_API_KEY }}" -T $artifactPath "https://trialmfnpst.jfrog.io/artifactory/aspnetmvccalc-generic-local/$targetFilePath"
          Write-Output "Artifact uploaded successfully."
